
<!-- <style>
  .search-btn{
    background-color:#fe424d;
    color: #fff;
    border-radius: 25px;
    padding: 0, 1rem, 0, 1rem;
  }
  .search-btn:hover{
    background-color:#fe424d;
    color: #fff;
  }
  .search-btn i{
    display: inline;
    margin-right: 0.5rem;
  }
  .search-input{
    border-radius: 35px;
    padding: 1rem, 3rem, 1rem, 3rem;
    font-size: 0.8rem;
  }
</style>

<nav class="navbar navbar-expand-lg bg-body-light border-bottom sticky-top">
  <div class="container-fluid">
    <a class="navbar-brand" href="/listings"><i class="fa-regular fa-compass"></i></a>
    <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNavAltMarkup" aria-controls="navbarNavAltMarkup" aria-expanded="false" aria-label="Toggle navigation">
      <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse" id="navbarNavAltMarkup">
      <div class="navbar-nav">
        <a class="nav-link" href="/listings">Explore</a>
      </div>
      <div class="navbar-nav ms-auto">
        <form class="d-flex" role="search" id="searchForm">
          <input class="form-control me-2 search-input" type="search" placeholder="Search destinations" id="searchInput" name="query"/>
          <button class="btn search-btn" type="submit"><i class="fa-solid fa-magnifying-glass"></i>Search</button>
        </form>
      </div>
      <div class="navbar-nav ms-auto">
        <a class="nav-link" href="/listings/new">Wanderlust your home</a>
        <% if(currUser) { %>
          <a class="nav-link" href="/bookings">My Bookings</a>
        <% } %>
        <% if(!currUser) { %>
          <a class="nav-link active" href="/signup"><b>SignUp</b></a>
          <a class="nav-link" href="/login"><b>LogIn</b></a>
        <% } %>
        <% if(currUser) { %>
          <a class="nav-link" href="/logout"><b>Logout</b></a>
        <% } %>
      </div>
    </div>
  </div>
</nav>

<script>
  // Search functionality
  const searchForm = document.getElementById('searchForm');
  const searchInput = document.getElementById('searchInput');

  searchForm.addEventListener('submit', async (e) => {
    e.preventDefault();
    const query = searchInput.value.trim();
    
    if (!query) {
      window.location.href = '/listings';
      return;
    }

    try {
      const response = await fetch(`/listings/search?query=${encodeURIComponent(query)}`);
      const data = await response.json();
      
      if (data.success) {
        if (window.location.pathname === '/listings') {
          displaySearchResults(data.listings);
        } else {
          sessionStorage.setItem('searchResults', JSON.stringify(data.listings));
          window.location.href = '/listings';
        }
      }
    } catch (error) {
      console.error('Search error:', error);
      alert('Search failed. Please try again.');
    }
  });

  function displaySearchResults(listings) {
    const container = document.getElementById('listings-container');
    
    if (!container) return;

    if (listings.length === 0) {
      container.innerHTML = `
        <div class="col-12 text-center mt-5">
          <h4>No listings found for "${searchInput.value}"</h4>
          <a href="/listings" class="btn btn-primary mt-3">View All Listings</a>
        </div>
      `;
      return;
    }

    const taxSwitch = document.getElementById('switchCheckDefault');
    container.innerHTML = listings.map(listing => `
      <a href="/listings/${listing._id}" class="listing-link">
        <div class="card col listing-card">
          <img src="${listing.image.url}" class="card-img-top" alt="listing_image" style="height: 20rem">
          <div class="card-img-overlay"></div>
          <div class="card-body">
            <p class="card-text">
              <b>${listing.title}</b><br>
              &#8377;${listing.price.toLocaleString("en-IN")} /night
              <i class="tax-info" style="display: ${taxSwitch && taxSwitch.checked ? 'none' : 'inline'}"> &nbsp;+ 18% GST</i>
            </p>
          </div>
        </div>
      </a>
    `).join('');

    
  }

  window.addEventListener('DOMContentLoaded', () => {
    const searchResults = sessionStorage.getItem('searchResults');
    if (searchResults && window.location.pathname === '/listings') {
      const listings = JSON.parse(searchResults);
      displaySearchResults(listings);
      sessionStorage.removeItem('searchResults');
    }
  });
</script> -->






<style>
  /* Original Search Button Styles */
  .search-btn {
    background-color: #fe424d;
    color: #fff;
    border-radius: 25px;
    padding: 0.5rem 1rem;
    border: none;
  }
  .search-btn:hover {
    background-color: #e63946;
    color: #fff;
  }
  .search-btn i {
    display: inline;
    margin-right: 0.5rem;
  }
  .search-input {
    border-radius: 35px;
    padding: 0.5rem 1rem;
    font-size: 0.9rem;
  }
</style>

<nav class="navbar navbar-expand-lg bg-body-light border-bottom sticky-top">
  <div class="container-fluid">
    <a class="navbar-brand" href="/listings"><i class="fa-regular fa-compass"></i></a>
    
    <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNavAltMarkup" aria-controls="navbarNavAltMarkup" aria-expanded="false" aria-label="Toggle navigation">
      <span class="navbar-toggler-icon"></span>
    </button>
    
    <div class="collapse navbar-collapse" id="navbarNavAltMarkup">
      <!-- Explore Link -->
      <div class="navbar-nav">
        <a class="nav-link" href="/listings">Explore</a>
      </div>
      
      <!-- Search Form -->
      <div class="navbar-nav ms-auto">
        <form class="d-flex" role="search" id="searchForm">
          <input class="form-control me-2 search-input" type="search" placeholder="Search destinations" id="searchInput" name="query"/>
          <button class="btn search-btn" type="submit"><i class="fa-solid fa-magnifying-glass"></i>Search</button>
        </form>
      </div>
      
      <!-- Desktop Navigation Links -->
      <div class="navbar-nav ms-auto">
        <a class="nav-link" href="/listings/new">Wanderlust your home</a>
        <% if(currUser) { %>
          <a class="nav-link" href="/bookings">My Bookings</a>
        <% } %>
        <% if(!currUser) { %>
          <a class="nav-link active" href="/signup"><b>SignUp</b></a>
          <a class="nav-link" href="/login"><b>LogIn</b></a>
        <% } %>
        <% if(currUser) { %>
          <a class="nav-link" href="/logout"><b>Logout</b></a>
        <% } %>
      </div>
      
      <!-- Hamburger Menu (Mobile Only) -->
      <button class="hamburger-menu" id="hamburgerMenu" aria-label="Toggle menu">
        <span></span>
        <span></span>
        <span></span>
      </button>
    </div>
  </div>
</nav>

<!-- Hidden template for mobile menu content -->
<div id="mobileMenuTemplate" style="display: none;">
  <a href="/listings/new" class="mobile-menu-link">Wanderlust your home</a>
  <% if(currUser) { %>
    <a href="/bookings" class="mobile-menu-link">My Bookings</a>
    <a href="/logout" class="mobile-menu-link"><b>Logout</b></a>
  <% } else { %>
    <a href="/signup" class="mobile-menu-link"><b>SignUp</b></a>
    <a href="/login" class="mobile-menu-link"><b>LogIn</b></a>
  <% } %>
</div>

<!-- Mobile Menu Container - Will be dynamically populated -->
<div id="mobileMenuContainer"></div>

<script>
  // Mobile Menu Functionality - Create elements ONLY when needed
  document.addEventListener('DOMContentLoaded', function() {
    const hamburgerMenu = document.getElementById('hamburgerMenu');
    const menuContainer = document.getElementById('mobileMenuContainer');
    const menuTemplate = document.getElementById('mobileMenuTemplate');
    
    if (!hamburgerMenu || !menuContainer || !menuTemplate) return;

    let mobileMenu = null;
    let mobileBackdrop = null;

    // Function to create mobile menu
    function createMobileMenu() {
      // Create backdrop
      mobileBackdrop = document.createElement('div');
      mobileBackdrop.className = 'mobile-backdrop';
      mobileBackdrop.style.cssText = `
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100vh;
        background-color: rgba(0, 0, 0, 0.5);
        z-index: 9999;
        opacity: 0;
        transition: opacity 0.3s;
      `;

      // Create menu overlay
      mobileMenu = document.createElement('div');
      mobileMenu.className = 'mobile-menu-overlay';
      mobileMenu.style.cssText = `
        position: fixed;
        top: 0;
        right: -280px;
        width: 280px;
        height: 100vh;
        background-color: white;
        box-shadow: -2px 0 10px rgba(0, 0, 0, 0.1);
        z-index: 10000;
        transition: right 0.3s ease;
        overflow-y: auto;
      `;

      // Create menu header
      const menuHeader = document.createElement('div');
      menuHeader.style.cssText = 'padding: 20px; border-bottom: 1px solid #e0e0e0; display: flex; align-items: center; justify-content: space-between;';
      menuHeader.innerHTML = '<h5 style="margin: 0; color: #222;">Menu</h5><button id="closeMobileMenu" style="font-size: 28px; cursor: pointer; background: none; border: none; color: #333; padding: 0; line-height: 1;" aria-label="Close menu">&times;</button>';

      // Create menu content container
      const menuContent = document.createElement('div');
      menuContent.style.cssText = 'padding: 20px;';
      
      // Clone the links from template
      const links = menuTemplate.querySelectorAll('.mobile-menu-link');
      links.forEach(link => {
        const clonedLink = link.cloneNode(true);
        clonedLink.style.cssText = 'display: block; padding: 15px 0; color: #222222; text-decoration: none; border-bottom: 1px solid #f0f0f0; font-size: 16px;';
        
        // Add hover effect
        clonedLink.addEventListener('mouseenter', () => clonedLink.style.color = '#fe424d');
        clonedLink.addEventListener('mouseleave', () => clonedLink.style.color = '#222222');
        
        menuContent.appendChild(clonedLink);
      });

      mobileMenu.appendChild(menuHeader);
      mobileMenu.appendChild(menuContent);

      // Append to container
      menuContainer.appendChild(mobileBackdrop);
      menuContainer.appendChild(mobileMenu);

      // Animate in
      setTimeout(() => {
        mobileBackdrop.style.opacity = '1';
        mobileMenu.style.right = '0';
      }, 10);

      // Close handlers
      const closeBtn = document.getElementById('closeMobileMenu');
      
      function closeMobileMenu() {
        mobileBackdrop.style.opacity = '0';
        mobileMenu.style.right = '-280px';
        hamburgerMenu.classList.remove('active');
        document.body.style.overflow = '';
        
        setTimeout(() => {
          if (mobileBackdrop && mobileBackdrop.parentNode) {
            mobileBackdrop.remove();
          }
          if (mobileMenu && mobileMenu.parentNode) {
            mobileMenu.remove();
          }
          mobileBackdrop = null;
          mobileMenu = null;
        }, 300);
      }

      closeBtn.addEventListener('click', closeMobileMenu);
      mobileBackdrop.addEventListener('click', closeMobileMenu);
      
      // Close when clicking any link
      const menuLinks = menuContent.querySelectorAll('a');
      menuLinks.forEach(link => {
        link.addEventListener('click', closeMobileMenu);
      });
    }

    // Open menu on hamburger click
    hamburgerMenu.addEventListener('click', function(e) {
      e.preventDefault();
      e.stopPropagation();
      
      // Don't create if already exists
      if (mobileMenu) return;
      
      hamburgerMenu.classList.add('active');
      document.body.style.overflow = 'hidden';
      createMobileMenu();
    });
  });

  // Search functionality
  const searchForm = document.getElementById('searchForm');
  const searchInput = document.getElementById('searchInput');

  if (searchForm && searchInput) {
    searchForm.addEventListener('submit', async (e) => {
      e.preventDefault();
      const query = searchInput.value.trim();
      
      if (!query) {
        window.location.href = '/listings';
        return;
      }

      try {
        const response = await fetch(`/listings/search?query=${encodeURIComponent(query)}`);
        const data = await response.json();
        
        if (data.success) {
          if (window.location.pathname === '/listings') {
            displaySearchResults(data.listings);
          } else {
            sessionStorage.setItem('searchResults', JSON.stringify(data.listings));
            window.location.href = '/listings';
          }
        }
      } catch (error) {
        console.error('Search error:', error);
        alert('Search failed. Please try again.');
      }
    });
  }

  function displaySearchResults(listings) {
    const container = document.getElementById('listings-container');
    
    if (!container) return;

    if (listings.length === 0) {
      container.innerHTML = `
        <div class="col-12 text-center mt-5">
          <h4>No listings found for "${searchInput.value}"</h4>
          <a href="/listings" class="btn btn-primary mt-3">View All Listings</a>
        </div>
      `;
      return;
    }

    const taxSwitch = document.getElementById('switchCheckDefault');
    container.innerHTML = listings.map(listing => `
      <a href="/listings/${listing._id}" class="listing-link">
        <div class="card col listing-card">
          <img src="${listing.image.url}" class="card-img-top" alt="listing_image" style="height: 20rem">
          <div class="card-img-overlay"></div>
          <div class="card-body">
            <p class="card-text">
              <b>${listing.title}</b><br>
              &#8377;${listing.price.toLocaleString("en-IN")} /night
              <i class="tax-info" style="display: ${taxSwitch && taxSwitch.checked ? 'none' : 'inline'}"> &nbsp;+ 18% GST</i>
            </p>
          </div>
        </div>
      </a>
    `).join('');
  }

  window.addEventListener('DOMContentLoaded', () => {
    const searchResults = sessionStorage.getItem('searchResults');
    if (searchResults && window.location.pathname === '/listings') {
      const listings = JSON.parse(searchResults);
      displaySearchResults(listings);
      sessionStorage.removeItem('searchResults');
    }
  });
</script>
