<% layout("/layouts/boilerplate") %>

<div class="row mt-3">
  <div class="col-8 offset-2">
    <h3>Book Your Stay</h3>
    <hr />
    
    <!-- Listing Summary -->
    <div class="card mb-4">
      <div class="row g-0">
        <div class="col-md-4">
          <img src="<%= listing.image.url %>" class="img-fluid rounded-start" alt="<%= listing.title %>" style="height: 100%; object-fit: cover;">
        </div>
        <div class="col-md-8">
          <div class="card-body">
            <h5 class="card-title"><%= listing.title %></h5>
            <p class="card-text"><%= listing.location %>, <%= listing.country %></p>
            <p class="card-text"><strong>₹<%= listing.price.toLocaleString("en-IN") %></strong> / night + 18% GST</p>
          </div>
        </div>
      </div>
    </div>

    <!-- Show Unavailable Dates if any -->
    <% if (existingBookings && existingBookings.length > 0) { %>
      <div class="alert alert-warning">
        <h6 class="alert-heading"><i class="fas fa-calendar-times"></i> Unavailable Dates:</h6>
        <ul class="mb-0">
          <% existingBookings.forEach(booking => { %>
            <li>
              <%= booking.checkIn.toLocaleDateString('en-IN', { day: 'numeric', month: 'short', year: 'numeric' }) %> 
              to 
              <%= booking.checkOut.toLocaleDateString('en-IN', { day: 'numeric', month: 'short', year: 'numeric' }) %>
            </li>
          <% }) %>
        </ul>
        <small class="text-muted mt-2 d-block">Please choose dates outside these ranges.</small>
      </div>
    <% } %>

    <!-- Booking Form -->
    <form action="/bookings?listingId=<%= listing._id %>" method="POST" novalidate class="needs-validation">
      
      <div class="row mb-3">
        <div class="col-md-6">
          <label for="checkIn" class="form-label">Check-in Date</label>
          <input 
            type="date" 
            class="form-control" 
            id="checkIn" 
            name="checkIn" 
            min="<%= new Date().toISOString().split('T')[0] %>"
            required
          >
          <div class="valid-feedback">Looks good!</div>
          <div class="invalid-feedback">Please select a check-in date.</div>
        </div>
        
        <div class="col-md-6">
          <label for="checkOut" class="form-label">Check-out Date</label>
          <input 
            type="date" 
            class="form-control" 
            id="checkOut" 
            name="checkOut" 
            min="<%= new Date().toISOString().split('T')[0] %>"
            required
          >
          <div class="valid-feedback">Looks good!</div>
          <div class="invalid-feedback">Please select a check-out date.</div>
        </div>
      </div>

      <div class="mb-3">
        <label for="guests" class="form-label">Number of Guests</label>
        <input 
          type="number" 
          class="form-control" 
          id="guests" 
          name="guests" 
          min="1" 
          max="10"
          value="1"
          required
        >
        <div class="valid-feedback">Looks good!</div>
        <div class="invalid-feedback">Please enter number of guests (1-10).</div>
      </div>

      <hr class="my-4">
      <h5>Guest Details</h5>

      <div class="mb-3">
        <label for="name" class="form-label">Full Name</label>
        <input 
          type="text" 
          class="form-control" 
          id="name" 
          name="name" 
          value="<%= currUser.username %>"
          required
        >
        <div class="valid-feedback">Looks good!</div>
        <div class="invalid-feedback">Please enter your full name.</div>
      </div>

      <div class="mb-3">
        <label for="email" class="form-label">Email</label>
        <input 
          type="email" 
          class="form-control" 
          id="email" 
          name="email" 
          value="<%= currUser.email %>"
          required
        >
        <div class="valid-feedback">Looks good!</div>
        <div class="invalid-feedback">Please enter a valid email.</div>
      </div>

      <div class="mb-3">
        <label for="phone" class="form-label">Phone Number</label>
        <input 
          type="tel" 
          class="form-control" 
          id="phone" 
          name="phone" 
          pattern="[0-9]{10}"
          placeholder="10-digit mobile number"
          required
        >
        <div class="valid-feedback">Looks good!</div>
        <div class="invalid-feedback">Please enter a valid 10-digit phone number.</div>
      </div>

      <div class="mb-3">
        <label for="specialRequests" class="form-label">Special Requests (Optional)</label>
        <textarea 
          class="form-control" 
          id="specialRequests" 
          name="specialRequests" 
          rows="3"
          placeholder="Any special requests or requirements..."
        ></textarea>
      </div>

      <hr class="my-4">
      
      <!-- Price Calculation Preview -->
      <div class="card bg-light mb-4">
        <div class="card-body">
          <h5 class="card-title">Price Details</h5>
          <div id="priceBreakdown">
            <p class="mb-1">Select dates to see price breakdown</p>
          </div>
        </div>
      </div>

      <!-- Payment Method -->
      <div class="card mb-4">
        <div class="card-body">
          <h5 class="card-title">Payment Method</h5>
          <div class="form-check">
            <input class="form-check-input" type="radio" name="paymentMethod" id="cod" value="COD" checked disabled>
            <label class="form-check-label" for="cod">
              <strong>Cash on Delivery (COD)</strong>
              <br>
              <small class="text-muted">Pay in cash when you arrive at the property</small>
            </label>
          </div>
        </div>
      </div>

      <button type="submit" class="btn btn-danger mb-3">Confirm Booking</button>
      <a href="/listings/<%= listing._id %>" class="btn btn-secondary mb-3">Cancel</a>
    </form>
  </div>
</div>

<script>
  // Existing bookings from server
  // Existing bookings from server
const bookedDates = JSON.parse('<%- JSON.stringify(existingBookings.map(b => ({ checkIn: b.checkIn, checkOut: b.checkOut }))) %>');
  const checkInInput = document.getElementById('checkIn');
  const checkOutInput = document.getElementById('checkOut');
  const priceBreakdown = document.getElementById('priceBreakdown');
  const pricePerNight = "<%=listing.price %>";

  // Calculate and display price
  function calculatePrice() {
    const checkIn = new Date(checkInInput.value);
    const checkOut = new Date(checkOutInput.value);
    
    if (checkIn && checkOut && checkOut > checkIn) {
      const nights = Math.ceil((checkOut - checkIn) / (1000 * 60 * 60 * 24));
      const basePrice = pricePerNight * nights;
      const gst = basePrice * 0.18;
      const total = basePrice + gst;
      
      priceBreakdown.innerHTML = `
        <p class="mb-1">₹${pricePerNight.toLocaleString("en-IN")} x ${nights} night${nights > 1 ? 's' : ''} = ₹${basePrice.toLocaleString("en-IN")}</p>
        <p class="mb-1">GST (18%) = ₹${gst.toLocaleString("en-IN")}</p>
        <hr>
        <p class="mb-0"><strong>Total: ₹${total.toLocaleString("en-IN")}</strong></p>
      `;
    } else if (checkOut <= checkIn) {
      priceBreakdown.innerHTML = '<p class="mb-0 text-danger">Check-out must be after check-in</p>';
    }
  }

  // Check for date conflicts
  function checkDateConflict() {
    const selectedCheckIn = new Date(checkInInput.value);
    const selectedCheckOut = new Date(checkOutInput.value);
    
    if (!selectedCheckIn || !selectedCheckOut) return;
    
    const hasConflict = bookedDates.some(booking => {
      const bookedCheckIn = new Date(booking.checkIn);
      const bookedCheckOut = new Date(booking.checkOut);
      
      return (
        (selectedCheckIn >= bookedCheckIn && selectedCheckIn < bookedCheckOut) ||
        (selectedCheckOut > bookedCheckIn && selectedCheckOut <= bookedCheckOut) ||
        (selectedCheckIn <= bookedCheckIn && selectedCheckOut >= bookedCheckOut)
      );
    });
    
    if (hasConflict) {
      alert('⚠️ Warning: These dates overlap with an existing booking. Please choose different dates.');
      checkOutInput.value = '';
      priceBreakdown.innerHTML = '<p class="mb-0 text-danger">Please select available dates</p>';
    } else {
      calculatePrice();
    }
  }

  // Event listeners
  checkInInput.addEventListener('change', function() {
    checkOutInput.min = this.value;
    checkDateConflict();
  });
  
  checkOutInput.addEventListener('change', checkDateConflict);
</script>